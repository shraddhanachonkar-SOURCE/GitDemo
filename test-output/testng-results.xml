<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="13" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-03T16:40:29 IST" name="Loan Department" finished-at="2025-07-03T16:40:29 IST" duration-ms="75">
    <groups>
      <group name="smoke">
        <method signature="day2.ploan()[pri:0, instance:test.day2@397fbdb]" name="ploan" class="test.day2"/>
        <method signature="day4.MobileloginHomeLoan()[pri:0, instance:test.day4@33d512c1]" name="MobileloginHomeLoan" class="test.day4"/>
        <method signature="day3.MobilelogincarLoan()[pri:0, instance:test.day3@1ff4931d]" name="MobilelogincarLoan" class="test.day3"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2025-07-03T16:40:29 IST" name="Personal Loan" finished-at="2025-07-03T16:40:29 IST" duration-ms="72">
      <class name="test.day4">
        <test-method signature="LoginAPIhomeLoan()[pri:0, instance:test.day4@33d512c1]" started-at="2025-07-03T16:40:29 IST" name="LoginAPIhomeLoan" finished-at="2025-07-03T16:40:29 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIhomeLoan -->
        <test-method signature="MobileloginHomeLoan()[pri:0, instance:test.day4@33d512c1]" started-at="2025-07-03T16:40:29 IST" name="MobileloginHomeLoan" finished-at="2025-07-03T16:40:29 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileloginHomeLoan -->
        <test-method signature="WebloginHomeLoan(java.lang.String)[pri:0, instance:test.day4@33d512c1]" started-at="2025-07-03T16:40:29 IST" name="WebloginHomeLoan" finished-at="2025-07-03T16:40:29 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginHomeLoan -->
      </class> <!-- test.day4 -->
      <class name="test.day2">
        <test-method is-config="true" signature="prerequiste()[pri:0, instance:test.day2@397fbdb]" started-at="2025-07-03T16:40:29 IST" name="prerequiste" finished-at="2025-07-03T16:40:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequiste -->
        <test-method signature="ploan()[pri:0, instance:test.day2@397fbdb]" started-at="2025-07-03T16:40:29 IST" name="ploan" finished-at="2025-07-03T16:40:29 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- test.day2 -->
      <class name="test.day1">
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:test.day1@65fb9ffc]" started-at="2025-07-03T16:40:29 IST" name="beforeclass" finished-at="2025-07-03T16:40:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method signature="demo()[pri:0, instance:test.day1@65fb9ffc]" started-at="2025-07-03T16:40:29 IST" name="demo" finished-at="2025-07-03T16:40:29 IST" duration-ms="16" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at test.day1.demo(day1.java:16)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method is-config="true" signature="afterexecution()[pri:0, instance:test.day1@65fb9ffc]" started-at="2025-07-03T16:40:29 IST" name="afterexecution" finished-at="2025-07-03T16:40:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterexecution -->
      </class> <!-- test.day1 -->
    </test> <!-- Personal Loan -->
    <test started-at="2025-07-03T16:40:29 IST" name="car loan" finished-at="2025-07-03T16:40:29 IST" duration-ms="75">
      <class name="test.day3">
        <test-method is-config="true" signature="Bfsuit()[pri:0, instance:test.day3@1ff4931d]" started-at="2025-07-03T16:40:29 IST" name="Bfsuit" finished-at="2025-07-03T16:40:29 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bfsuit -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@1ff4931d]" started-at="2025-07-03T16:40:29 IST" name="beforeevery" finished-at="2025-07-03T16:40:29 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobilelogincarLoan()[pri:0, instance:test.day3@1ff4931d]" started-at="2025-07-03T16:40:29 IST" name="MobilelogincarLoan" finished-at="2025-07-03T16:40:29 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilelogincarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@1ff4931d]" started-at="2025-07-03T16:40:29 IST" name="afterevery" finished-at="2025-07-03T16:40:29 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@1ff4931d]" started-at="2025-07-03T16:40:29 IST" name="beforeevery" finished-at="2025-07-03T16:40:29 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobilesignoutcarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@1ff4931d]" started-at="2025-07-03T16:40:29 IST" name="MobilesignoutcarLoan" data-provider="getdata" finished-at="2025-07-03T16:40:29 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutcarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@1ff4931d]" started-at="2025-07-03T16:40:29 IST" name="afterevery" finished-at="2025-07-03T16:40:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method signature="MobilesignoutcarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@1ff4931d]" started-at="2025-07-03T16:40:29 IST" name="MobilesignoutcarLoan" data-provider="getdata" finished-at="2025-07-03T16:40:29 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutcarLoan -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@1ff4931d]" started-at="2025-07-03T16:40:29 IST" name="beforeevery" finished-at="2025-07-03T16:40:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@1ff4931d]" started-at="2025-07-03T16:40:29 IST" name="afterevery" finished-at="2025-07-03T16:40:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method signature="MobilesignoutcarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@1ff4931d]" started-at="2025-07-03T16:40:29 IST" name="MobilesignoutcarLoan" data-provider="getdata" finished-at="2025-07-03T16:40:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutcarLoan -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@1ff4931d]" started-at="2025-07-03T16:40:29 IST" name="beforeevery" finished-at="2025-07-03T16:40:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@1ff4931d]" started-at="2025-07-03T16:40:29 IST" name="afterevery" finished-at="2025-07-03T16:40:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method signature="WebloginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@1ff4931d]" started-at="2025-07-03T16:40:29 IST" name="WebloginCarLoan" finished-at="2025-07-03T16:40:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginCarLoan -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@1ff4931d]" started-at="2025-07-03T16:40:29 IST" name="beforeevery" finished-at="2025-07-03T16:40:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@1ff4931d]" started-at="2025-07-03T16:40:29 IST" name="afterevery" finished-at="2025-07-03T16:40:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:test.day3@1ff4931d]" started-at="2025-07-03T16:40:29 IST" name="afterclass" finished-at="2025-07-03T16:40:29 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
      </class> <!-- test.day3 -->
      <class name="test.day1">
        <test-method is-config="true" signature="Afsuite()[pri:0, instance:test.day1@65fb9ffc]" started-at="2025-07-03T16:40:29 IST" name="Afsuite" finished-at="2025-07-03T16:40:29 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afsuite -->
      </class> <!-- test.day1 -->
    </test> <!-- car loan -->
  </suite> <!-- Loan Department -->
</testng-results>
